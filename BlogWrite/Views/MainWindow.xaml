<Window x:Class="BlogWrite.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BlogWrite"
        xmlns:common="clr-namespace:BlogWrite.Common"
        xmlns:helpers="clr-namespace:BlogWrite.Helpers"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        mc:Ignorable="d"
        WindowStyle="None"
        Background="{DynamicResource WindowBackgroundBaseColorBrush}"
        DataContext="{StaticResource MainViewModel}"
        Title="{Binding AppTitle}"
        StateChanged="Window_StateChanged"
        Closing="MainWindow_Closing"
        Height="450" Width="800">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"/>
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Cursor" Value="Wait" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsWorking}" Value="True">
                    <Setter Property="Cursor" Value="AppStarting" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Border Style="{StaticResource WindowMainPanelStyle}" UseLayoutRounding="True">
        <Grid x:Name="LayoutGrid" Background="{DynamicResource BoardBackgroundColorBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0"/>
                <RowDefinition Height="0"/>
                <RowDefinition Height="28"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="260"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- App Title Bar-->
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- App icon -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                    <Button ToolTip="{Binding AppTitle}" Width="32" Height="32" IsHitTestVisible="True" WindowChrome.IsHitTestVisibleInChrome="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                <!--
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                -->
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="Border" CornerRadius="0" BorderThickness="0" Background="{TemplateBinding Background}">
                                                <Viewbox Width="16" Height="16" Margin="6 0 6 0">
                                                    <Canvas Width="24" Height="24">
                                                        <Canvas.RenderTransform>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </Canvas.RenderTransform>
                                                        
                                                    </Canvas>
                                                </Viewbox>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <!-- Main Menu -->
                <Menu Style="{DynamicResource MainMenuStyle}" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0 0 0 0" IsHitTestVisible="True" WindowChrome.IsHitTestVisibleInChrome="True">
                    <MenuItem x:Name="MainMenuMainItem" Header="_Files" Style="{DynamicResource MainMenuItemStyle}">
                        <MenuItem.Resources>
                            <ControlTemplate x:Key="hamburger-menu">
                                <Canvas Background="Transparent">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="4" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Path Fill="{TemplateBinding Foreground}" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />
                                </Canvas>
                            </ControlTemplate>
                        </MenuItem.Resources>
                        <MenuItem.Icon>
                            <ContentControl Template="{StaticResource hamburger-menu}"/>
                        </MenuItem.Icon>
                        <MenuItem Header="Add" Command="{Binding ServiceAddCommand}">
                            <MenuItem.Resources>
                                <ControlTemplate x:Key="add">
                                    <Canvas Background="Transparent">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="4" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Path Fill="{TemplateBinding Foreground}" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M17,13H13V17H11V13H7V11H11V7H13V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                                    </Canvas>
                                </ControlTemplate>
                            </MenuItem.Resources>
                            <MenuItem.Icon>
                                <ContentControl Template="{StaticResource add}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="New Folder" Command="{Binding FolderAddCommand}">
                            <MenuItem.Resources>
                                <ControlTemplate x:Key="new-folder">
                                    <Canvas Background="Transparent">
                                        <Canvas.RenderTransform>
                                            <TranslateTransform X="4" Y="0"/>
                                        </Canvas.RenderTransform>
                                        <Path Fill="{TemplateBinding Foreground}" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12 12H14V10H16V12H18V14H16V16H14V14H12V12M22 8V18C22 19.11 21.11 20 20 20H4C2.89 20 2 19.11 2 18V6C2 4.89 2.89 4 4 4H10L12 6H20C21.11 6 22 6.89 22 8M20 8H4V18H20V8Z" />
                                    </Canvas>
                                </ControlTemplate>
                            </MenuItem.Resources>
                            <MenuItem.Icon>
                                <ContentControl Template="{StaticResource new-folder}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Import">
                            <MenuItem Header="OPML"/>
                        </MenuItem>
                        <MenuItem Header="Export">
                            <MenuItem Header="OPML"/>
                            <MenuItem Header="Entries as Feed"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="E_xit" Click="CloseButton_Click"/>
                    </MenuItem>
                </Menu>

                <!-- System icons -->
                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right" Margin="0">

                    <Button x:Name="SettingsButton" Style="{DynamicResource PathSysButton}" Command="{Binding ShowSettingsCommand}" WindowChrome.IsHitTestVisibleInChrome="True"
                                Content="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,
8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,
11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,
4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,
2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,
5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,
12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,
18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,
21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,
18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z">
                    </Button>

                    <Button x:Name="MinimizeButton" Style="{StaticResource PathSysButton}" Click="MinimizeButton_Click" WindowChrome.IsHitTestVisibleInChrome="True">
                        M20,14H4V10H20
                    </Button>

                    <Button x:Name="RestoreButton" Style="{StaticResource PathSysButton}" Click="RestoreButton_Click" WindowChrome.IsHitTestVisibleInChrome="True">
                        M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z
                    </Button>

                    <Button x:Name="MaxButton" Style="{StaticResource PathSysButton}" Click="MaxButton_Click" WindowChrome.IsHitTestVisibleInChrome="True">
                        M4,4H20V20H4V4M6,8V18H18V8H6Z
                    </Button>

                    <Button x:Name="CloseButton" Style="{StaticResource PathSysButtonClose}" Click="CloseButton_Click" WindowChrome.IsHitTestVisibleInChrome="True">
                        M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z
                    </Button>

                </StackPanel>

            </Grid>

            <!-- Error Info Panel -->
            <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding IsShowMainErrorMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <!-- HTTP Error info bar -->
                <Border Background="LightYellow" CornerRadius="2">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Viewbox Width="12" Height="12" Margin="0 -4 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas Width="18" Height="18">
                                    <Path Fill="Red" Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" />
                                </Canvas>
                            </Viewbox>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBox Text="{Binding MainError.ErrText, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text=":" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding MainError.ErrDescription, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">

                            <TextBox Text="-" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding MainError.ErrDatetime, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Text="@" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding MainError.ErrPlace, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="in" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding MainError.ErrPlaceParent, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="type:" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding MainError.ErrType, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!-- Left TreeView Pane -->
            <Grid Grid.Row="2" Grid.Column="0" Background="{DynamicResource WindowBackgroundBaseColorBrush}">
                <TreeView x:Name="TreeViewMenu" Margin="0 1 0 0" Style="{DynamicResource TreeViewMenuStyle}" ItemsSource="{Binding Services}" helpers:TreeViewHelper.SelectedItem="{Binding SelectedNode, Mode=TwoWay}" AllowDrop="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding ServiceAddCommand}">
                                <MenuItem.Resources>
                                    <ControlTemplate x:Key="add">
                                        <Canvas Background="Transparent">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="4" Y="0"/>
                                            </Canvas.RenderTransform>
                                            <Path Fill="{TemplateBinding Foreground}" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M17,13H13V17H11V13H7V11H11V7H13V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                                        </Canvas>
                                    </ControlTemplate>
                                </MenuItem.Resources>
                                <MenuItem.Icon>
                                    <ContentControl Template="{StaticResource add}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="New Folder" Command="{Binding FolderAddCommand}">
                                <MenuItem.Resources>
                                    <ControlTemplate x:Key="new-folder">
                                        <Canvas Background="Transparent">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="4" Y="0"/>
                                            </Canvas.RenderTransform>
                                            <Path Fill="{TemplateBinding Foreground}" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12 12H14V10H16V12H18V14H16V16H14V14H12V12M22 8V18C22 19.11 21.11 20 20 20H4C2.89 20 2 19.11 2 18V6C2 4.89 2.89 4 4 4H10L12 6H20C21.11 6 22 6.89 22 8M20 8H4V18H20V8Z" />
                                        </Canvas>
                                    </ControlTemplate>
                                </MenuItem.Resources>
                                <MenuItem.Icon>
                                    <ContentControl Template="{StaticResource new-folder}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.Resources>
                        <ContextMenu x:Key="TreeviewMenuItemContextMenu">
                            <MenuItem Name="TreeViewMenuItemUpdate" Header="Update" Command="{Binding Path=DataContext.ServiceUpdateCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}"></MenuItem>
                            <Separator/>
                            <MenuItem Name="TreeViewMenuItemRename" Header="名前の変更" Click="TreeViewMenuItemRename_Click"></MenuItem>
                            <Separator/>
                            <MenuItem Name="TreeViewMenuItemDelete" Header="削除" Click="TreeViewMenuItemDelete_Click">
                                <MenuItem.Resources>
                                    <ControlTemplate x:Key="TreeViewItemRemoveIcon">
                                        <Canvas Background="Transparent" >
                                            <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M2,6V8H14V6H2M2,10V12H11V10H2M14.17,10.76L12.76,12.17L15.59,15L12.76,17.83L14.17,19.24L17,16.41L19.83,19.24L21.24,17.83L18.41,15L21.24,12.17L19.83,10.76L17,13.59L14.17,10.76M2,14V16H11V14H2Z" />
                                        </Canvas>
                                    </ControlTemplate>
                                </MenuItem.Resources>
                                <MenuItem.Icon>
                                    <ContentControl Template="{StaticResource TreeViewItemRemoveIcon}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Name="TreeViewMenuItemShowInfo" Header="情報の表示" Click="TreeViewMenuItemShowInfo_Click"></MenuItem>
                        </ContextMenu>
                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Width" Value="18"/>
                                    <Setter Property="Height" Value="Auto" />
                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.Resources>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="local:NodeTree" ItemsSource="{Binding Path=Children}">
                            <StackPanel>
                                <Separator x:Name="beforeSeparator" BorderThickness="1" BorderBrush="#fff" Visibility="Collapsed"/>
                                <Border x:Name="PanelBackground" Background="Transparent" CornerRadius="3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <Viewbox Width="12" Height="12" Margin="0 0 4 2">
                                                <Canvas Width="18" Height="18">
                                                    <Path Data="{Binding PathIcon}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" />
                                                </Canvas>
                                            </Viewbox>
                                            <TextBlock x:Name="NodeTextBlock" Text="{Binding Path=Name}" Padding="4"/>
                                        </StackPanel>

                                        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RenameTextBox" Text="{Binding Name, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-5 0 3 0" Width="Auto" Visibility="Collapsed" LostFocus="RenameTextBox_LostFocus" KeyUp="RenameTextBox_KeyUp">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
                                                    <Setter Property="Background" Value="{StaticResource NormalTextBoxBackgroundColorBrush}" />
                                                    <Setter Property="Margin" Value="0" />
                                                    <Setter Property="Padding" Value="3" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                <Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="28"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                        <Button x:Name="UpdateNodeNameButton" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" IsDefault="True" Click="UpdateNodeNameButton_Click" Content="M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z">
                                                                            <Button.Style>
                                                                                <Style TargetType="Button">
                                                                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                                                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                                    <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                                                                                    <Setter Property="Background" Value="Transparent" />
                                                                                    <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="Button">
                                                                                                <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" CornerRadius="0" BorderThickness="0">
                                                                                                    <Border.BorderBrush>
                                                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                            <LinearGradientBrush.GradientStops>
                                                                                                                <GradientStopCollection>
                                                                                                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                                                                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                                                                                </GradientStopCollection>
                                                                                                            </LinearGradientBrush.GradientStops>
                                                                                                        </LinearGradientBrush>
                                                                                                    </Border.BorderBrush>
                                                                                                    <Border.Background>
                                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                                                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                                                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                                                                                        </LinearGradientBrush>
                                                                                                    </Border.Background>

                                                                                                    <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="8" RenderTransformOrigin="0.5,0.5">
                                                                                                        <Path.RenderTransform>
                                                                                                            <TransformGroup>
                                                                                                                <TransformGroup.Children>
                                                                                                                    <RotateTransform Angle="0" />
                                                                                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                                                                </TransformGroup.Children>
                                                                                                            </TransformGroup>
                                                                                                        </Path.RenderTransform>
                                                                                                        <Path.Fill>
                                                                                                            <SolidColorBrush x:Name="PathIconColor" Color="#333"/>
                                                                                                        </Path.Fill>
                                                                                                    </Path>
                                                                                                </Border>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <Trigger Property="IsDefault" Value="true">
                                                                                                        <Setter TargetName="Border" Property="BorderBrush">
                                                                                                            <Setter.Value>
                                                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                                    <GradientBrush.GradientStops>
                                                                                                                        <GradientStopCollection>
                                                                                                                            <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="0.0" />
                                                                                                                            <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                                                                                        </GradientStopCollection>
                                                                                                                    </GradientBrush.GradientStops>
                                                                                                                </LinearGradientBrush>

                                                                                                            </Setter.Value>
                                                                                                        </Setter>
                                                                                                    </Trigger>

                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#666"/>
                                                                                                    </Trigger>

                                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#222"/>
                                                                                                    </Trigger>

                                                                                                    <MultiTrigger>
                                                                                                        <MultiTrigger.Conditions>
                                                                                                            <Condition Property="IsPressed" Value="False" />
                                                                                                            <Condition Property="IsMouseOver" Value="True" />
                                                                                                        </MultiTrigger.Conditions>
                                                                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#000"/>
                                                                                                    </MultiTrigger>

                                                                                                    <MultiTrigger>
                                                                                                        <MultiTrigger.Conditions>
                                                                                                            <Condition Property="IsPressed" Value="true" />
                                                                                                            <Condition Property="IsMouseOver" Value="True" />
                                                                                                        </MultiTrigger.Conditions>
                                                                                                        <Setter TargetName="PathIcon" Property="Fill" Value="#222"/>
                                                                                                    </MultiTrigger>

                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Button.Style>
                                                                        </Button>
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                                                        <Setter Property="Background" Value="Gainsboro" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>

                                        <TextBlock Grid.Column="2" Text="{Binding SubNodeText}" Margin="9 3 3 3" HorizontalAlignment="Right"></TextBlock>
                                    </Grid>
                                </Border>
                                <Separator x:Name="afterSeparator" BorderThickness="1" BorderBrush="#fff" Visibility="Collapsed" />
                            </StackPanel>
                            
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsDragOver}" Value="True">
                                    <Setter TargetName="PanelBackground" Property="Background" Value="Gray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsBeforeDragSeparator}" Value="True">
                                    <Setter TargetName="beforeSeparator" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAfterDragSeparator}" Value="True">
                                    <Setter TargetName="afterSeparator" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewMenuItemStyle}">
                            <Setter Property="OverridesDefaultStyle" Value="False" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="ContextMenu" Value="{StaticResource TreeviewMenuItemContextMenu}"/>

                            <!-- For right click select -->
                            <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown"  Handler="TreeViewItem_OnPreviewMouseRightButtonDown"/>

                            <!-- For drag and drop -->
                            <EventSetter Event="TreeViewItem.DragOver"  Handler="TreeView_DragOver"/>
                            <EventSetter Event="TreeViewItem.Drop" Handler="TreeView_Drop"/>
                            <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeView_MouseMove"/>
                            <EventSetter Event="TreeViewItem.MouseDown" Handler="TreeView_MouseDown"/>
                            <EventSetter Event="TreeViewItem.MouseUp" Handler="TreeView_MouseUp"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>

            <!-- Splitter -->
            <GridSplitter Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" ResizeDirection="Columns" Style="{StaticResource GridSplitterStyle}"></GridSplitter>

            <!-- Right ListView Pane -->
            <Grid Grid.Row="2" Grid.Column="2" x:Name="GridRight" MinWidth="24">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="24"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- HTTP Error info bar -->
                <Border Grid.Row="0" Grid.Column="0" Background="LightYellow" CornerRadius="2">
                    <Grid HorizontalAlignment="Stretch" Visibility="{Binding IsShowHttpClientErrorMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Viewbox Width="12" Height="12" Margin="0 -4 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas Width="18" Height="18">
                                    <Path Fill="Red" Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" />
                                </Canvas>
                            </Viewbox>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBox Text="{Binding HttpError.ErrText, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text=":" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding HttpError.ErrDescription, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">

                            <TextBox Text="-" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding HttpError.ErrDatetime, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Text="@" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding HttpError.ErrPlace, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="in" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding HttpError.ErrPlaceParent, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="type:" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding HttpError.ErrType, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Database Error info bar -->
                <Border Grid.Row="1" Grid.Column="0" Background="LightYellow" CornerRadius="2">
                    <Grid HorizontalAlignment="Stretch" Visibility="{Binding IsShowDatabaseErrorMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="24"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Viewbox Width="12" Height="12" Margin="0 -4 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas Width="18" Height="18">
                                    <Path Fill="Red" Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" />
                                </Canvas>
                            </Viewbox>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBox Text="{Binding DatabaseError.ErrText, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text=":" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding DatabaseError.ErrDescription, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" FontWeight="Bold" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">

                            <TextBox Text="-" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding DatabaseError.ErrDatetime, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Text="@" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding DatabaseError.ErrPlace, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="in" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding DatabaseError.ErrPlaceParent, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                            <TextBox Text="type:" Background="Transparent" BorderThickness="0" IsReadOnly="True"></TextBox>
                            <TextBox Text="{Binding DatabaseError.ErrType, Mode=OneWay}" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Menu panel -->
                <Border Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <StackPanel Orientation="Horizontal">

                        <Button Content="Mark as all read" Height="24" Margin="12 0 12 0" Command="{Binding MarkAsReadCommand}" VerticalAlignment="Center" ToolTip="In-App Browser Window Show/Hide">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Margin" Value="0 0 0 0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="0" BorderThickness="0">
                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                        <Viewbox Width="12" Height="12" Margin="0">
                                                            <Canvas Width="24" Height="24">
                                                                <Canvas.RenderTransform>
                                                                    <TranslateTransform X="1" Y="3"/>
                                                                </Canvas.RenderTransform>
                                                                <Path x:Name="PathIcon" Data="M21.59,11.59L23,13L13.5,22.5L8.42,17.41L9.83,16L13.5,19.68L21.59,11.59M4,16V3H6L9,3A4,4 0 0,1 13,7C13,8.54 12.13,9.88 10.85,10.55L14,16H12L9.11,11H6V16H4M6,9H9A2,2 0 0,0 11,7A2,2 0 0,0 9,5H6V9Z" Stretch="Uniform">
                                                                    <Path.Fill>
                                                                        <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                                    </Path.Fill>
                                                                    <Path.RenderTransform>
                                                                        <TransformGroup>
                                                                            <TransformGroup.Children>
                                                                                <RotateTransform Angle="0" />
                                                                                <ScaleTransform ScaleX="1.18" ScaleY="1.18" />
                                                                            </TransformGroup.Children>
                                                                        </TransformGroup>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Canvas>
                                                        </Viewbox>
                                                        <TextBlock x:Name="ButtonText" Margin="6 0 0 0" Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"></TextBlock>
                                                    </StackPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                        <Setter TargetName="ButtonText" Property="TextElement.Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsPressed" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                                        <Setter TargetName="ButtonText" Property="TextElement.Foreground" Value="{DynamicResource ControlPressedColorBrush}"/>
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <ComboBox Margin="0 0 12 0" VerticalAlignment="Center" SelectedIndex="{Binding SelectedComboBoxItemIndex}" Style="{DynamicResource ComboBoxFlatStyle}" IsReadOnly="True">
                            <ComboBoxItem Margin="0 0 0 3">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Viewbox Width="12" Height="12" Margin="0 0 6 0" VerticalAlignment="Center">
                                        <Canvas Width="24" Height="24">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="1" Y="4"/>
                                            </Canvas.RenderTransform>
                                            <Path x:Name="EyeOutlineIcon" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" Data="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z" Stretch="Uniform">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1.18" ScaleY="1.18" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock VerticalAlignment="Center" Text="Only unread"></TextBlock>
                                </StackPanel>
                            </ComboBoxItem>
                            <ComboBoxItem Margin="0 0 0 3">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <Viewbox Width="12" Height="12" Margin="0 0 6 0" VerticalAlignment="Center">
                                        <Canvas Width="24" Height="24">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="1" Y="4"/>
                                            </Canvas.RenderTransform>
                                            <Path x:Name="EyeIcon" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" Data="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z" Stretch="Uniform">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1.18" ScaleY="1.18" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock VerticalAlignment="Center" Text="Display all"></TextBlock>
                                </StackPanel>
                            </ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </Border>
                
                <!-- Entries cardview/listview -->
                <TabControl x:Name="ViewTab" Grid.Row="3" Grid.Column="0" Style="{DynamicResource TabControlBottomStyle}" TabStripPlacement="Bottom">

                    <!-- CardsView -->
                    <TabItem Header="Cards" Style="{DynamicResource TabItemBottomStyle}" Height="32">

                        <ListView x:Name="CardViewListview" Background="Transparent" Foreground="LightGray" BorderThickness="0" Padding="0" ItemsSource="{Binding Entries, NotifyOnTargetUpdated=True}" TargetUpdated="CardViewListview_TargetUpdated" SelectedItem="{Binding Mode=TwoWay,Path=SelectedItem}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding Path=DataContext.ListviewEnterKeyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" />
                            </ListView.InputBindings>
                            <ListView.Resources>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style x:Key="ListviewItemFocusVisual">
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border CornerRadius="3">
                                                    <Rectangle Margin="2" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Open In App Browser" Command="{Binding Path=DataContext.OpenInAppBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="OpenInAppBrowser">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource OpenInAppBrowser}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Open In Default Browser" Command="{Binding Path=DataContext.OpenInExternalBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="OpenInBrowser">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource OpenInBrowser}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Edit"
                                  Command="{Binding Path=DataContext.OpenEditorCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="EditIcon">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737"
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource EditIcon}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Reload"
                                  Command="{Binding Path=DataContext.GetEntryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="GetEntry">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737"
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M12,6V9L16,5L12,1V4A8,8 0 0,0 4,12C4,13.57 4.46,15.03 5.24,16.26L6.7,14.8C6.25,13.97 6,13 6,12A6,6 0 0,1 12,6M18.76,7.74L17.3,9.2C17.74,10.04 18,11 18,12A6,6 0 0,1 12,18V15L8,19L12,23V20A8,8 0 0,0 20,12C20,10.43 19.54,8.97 18.76,7.74Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource GetEntry}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Delete"
                                  Command="{Binding Path=DataContext.DeleteEntryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="DeleteForeverIcon">
                                                <Canvas Background="Transparent">
                                                    <Path Fill="#373737" 
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource DeleteForeverIcon}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="6"/>
                                    <Setter Property="BorderBrush" Value="#333"/>
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource ListviewItemFocusVisual}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="3">
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#888"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderBrush" Value="#666" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="Border" Width="229" Height="180" Background="#1E1E1E" CornerRadius="3">
                                        <Border.InputBindings>
                                            <MouseBinding Command="{Binding Path=DataContext.OpenInExternalBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding}" Gesture="LeftDoubleClick" />
                                        </Border.InputBindings>

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="24"/>
                                                <RowDefinition Height="132"/>
                                                <RowDefinition Height="24"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel x:Name="TopBar" Orientation="Horizontal" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right">

                                                <Button Width="24" Height="24" Style="{DynamicResource PathButton}" Content="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z" HorizontalAlignment="Right" Command="{Binding Path=DataContext.OpenInAppBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding}"></Button>
                                                <Button Width="24" Height="24" Style="{DynamicResource PathButton}" Content="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" HorizontalAlignment="Right" Command="{Binding Path=DataContext.OpenInExternalBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding}"></Button>
                                            
                                            </StackPanel>

                                            <Grid Grid.Row="1" Grid.Column="0">

                                                <Border Background="#1E1E1E" CornerRadius="3" VerticalAlignment="Top" Margin="0 5 0 0">
                                                    <Grid>
                                                        <!--  Adding rounded corners here  -->
                                                        <Border Name="EntryImageMask" Margin="0" Background="#1E1E1E" CornerRadius="3"/>
                                                        <!--  Image  -->
                                                        <Grid>
                                                            <Grid.OpacityMask>
                                                                <VisualBrush Visual="{Binding ElementName=EntryImageMask}" />
                                                            </Grid.OpacityMask>
                                                            <Image x:Name="EntryImage" Stretch="Uniform" Width="220" Height="127" Margin="0" Source="{Binding Image}" Opacity="0.1"></Image>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                                
                                                <StackPanel>
                                                    <TextBlock x:Name="EntryTitle" Text="{Binding Name}" FontSize="13.5" TextWrapping="Wrap" Padding="6 0 3 0" Foreground="{DynamicResource NormalTextColorBrush}"></TextBlock>
                                                    <TextBlock x:Name="EntrySummary" Text="{Binding SummaryPlainText}" TextWrapping="Wrap" Padding="9 9 3 6" Foreground="#555"></TextBlock>
                                                </StackPanel>
                                            </Grid>
                                            <TextBlock Grid.Row="2" Grid.Column="0" Margin="3" Text="{Binding PublishedDateTimeFormated}" Foreground="#444" HorizontalAlignment="Right" VerticalAlignment="Bottom"></TextBlock>

                                        </Grid>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter TargetName="EntryTitle" Property="Foreground" Value="White"/>
                                            <Setter TargetName="EntrySummary" Property="Foreground" Value="#888"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                            <Setter TargetName="EntryTitle" Property="Foreground" Value="White"/>
                                            <Setter TargetName="EntrySummary" Property="Foreground" Value="#888"/>
                                            <Setter TargetName="EntryImage" Property="Opacity" Value="0.4"/>
                                        </DataTrigger>
                                        <!--
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                            <Setter TargetName="Border" Property="BorderThickness" Value="3"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                                        </DataTrigger>
                                        -->
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    
                    </TabItem>

                    <!-- ListView -->
                    <TabItem Header="List" Style="{DynamicResource TabItemBottomStyle}" Height="32">
                        
                        <Grid x:Name="GridListView" Background="{DynamicResource BoardBackgroundColorBrush}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="3*" MinHeight="0"/>
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="5*" MinHeight="0"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Grid Grid.Row="0" Grid.Column="0" Margin="0 0 23 0" HorizontalAlignment="Stretch" Visibility="Hidden">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0" MinWidth="0"  MaxWidth="1" />
                                    <ColumnDefinition Width="*" MinWidth="180"/>
                                    <ColumnDefinition Width="160" MinWidth="110" MaxWidth="200"/>
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="hwidth0" Grid.Column="0" />
                                <Grid x:Name="hwidth1" Grid.Column="1" />
                                <Grid x:Name="hwidth2" Grid.Column="2" />
                            </Grid>

                            <!-- Entries listview -->
                            <ListView x:Name="ListViewListView" Grid.Row="1" Grid.Column="0" MinHeight="80" BorderThickness="0" Padding="0" Foreground="LightGray" helpers:GridViewSort.AutoSort="True" helpers:GridViewSort.ShowSortGlyph="True" IsSynchronizedWithCurrentItem="True" Background="{DynamicResource WindowBackgroundBaseColorBrush}" Margin="0" ItemsSource="{Binding Entries, NotifyOnTargetUpdated=True}" TargetUpdated="ListViewListView_TargetUpdated" SelectedItem="{Binding Mode=TwoWay,Path=SelectedItem}" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AlternationCount="2">
                                <ListView.InputBindings>
                                    <KeyBinding Key="Enter"
                                Command="{Binding Path=DataContext.ListviewEnterKeyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" />
                                </ListView.InputBindings>
                                <ListView.Resources>
                                    <ContextMenu x:Key="ItemContextMenu">
                                        <MenuItem Header="Open In App Browser" Command="{Binding Path=DataContext.OpenInAppBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                            <MenuItem.Resources>
                                                <ControlTemplate x:Key="OpenInAppBrowser">
                                                    <Canvas Background="Transparent" >
                                                        <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z" />
                                                    </Canvas>
                                                </ControlTemplate>
                                            </MenuItem.Resources>
                                            <MenuItem.Icon>
                                                <ContentControl Template="{StaticResource OpenInAppBrowser}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Open In Default Browser" Command="{Binding Path=DataContext.OpenInExternalBrowserCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                            <MenuItem.Resources>
                                                <ControlTemplate x:Key="OpenInExtBrowser">
                                                    <Canvas Background="Transparent" >
                                                        <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" />
                                                    </Canvas>
                                                </ControlTemplate>
                                            </MenuItem.Resources>
                                            <MenuItem.Icon>
                                                <ContentControl Template="{StaticResource OpenInExtBrowser}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="Edit"
                                  Command="{Binding Path=DataContext.OpenEditorCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                            <MenuItem.Resources>
                                                <ControlTemplate x:Key="EditIcon">
                                                    <Canvas Background="Transparent" >
                                                        <Path Fill="#373737"
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                                                    </Canvas>
                                                </ControlTemplate>
                                            </MenuItem.Resources>
                                            <MenuItem.Icon>
                                                <ContentControl Template="{StaticResource EditIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Reload"
                                  Command="{Binding Path=DataContext.GetEntryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                            <MenuItem.Resources>
                                                <ControlTemplate x:Key="GetEntry">
                                                    <Canvas Background="Transparent" >
                                                        <Path Fill="#373737"
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M12,6V9L16,5L12,1V4A8,8 0 0,0 4,12C4,13.57 4.46,15.03 5.24,16.26L6.7,14.8C6.25,13.97 6,13 6,12A6,6 0 0,1 12,6M18.76,7.74L17.3,9.2C17.74,10.04 18,11 18,12A6,6 0 0,1 12,18V15L8,19L12,23V20A8,8 0 0,0 20,12C20,10.43 19.54,8.97 18.76,7.74Z" />
                                                    </Canvas>
                                                </ControlTemplate>
                                            </MenuItem.Resources>
                                            <MenuItem.Icon>
                                                <ContentControl Template="{StaticResource GetEntry}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="Delete"
                                  Command="{Binding Path=DataContext.DeleteEntryCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                            <MenuItem.Resources>
                                                <ControlTemplate x:Key="DeleteForeverIcon">
                                                    <Canvas Background="Transparent">
                                                        <Path Fill="#373737" 
                          Width="14.3775"
                          Height="14"
                          Canvas.Left="0.311264"
                          Canvas.Top="0.500005"
                          Stretch="Uniform"
                          Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z" />
                                                    </Canvas>
                                                </ControlTemplate>
                                            </MenuItem.Resources>
                                            <MenuItem.Icon>
                                                <ContentControl Template="{StaticResource DeleteForeverIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Vertical">
                                                <Setter Property="Width" Value="18"/>
                                                <Setter Property="Height" Value="Auto" />
                                                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                            </Trigger>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="Width" Value="Auto"/>
                                                <Setter Property="Height" Value="18" />
                                                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style x:Key="ListViewScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>

                                                        <!--
                                                    <ScrollContentPresenter Grid.Column="0"/>
                                                    -->
                                                        <DockPanel Margin="{TemplateBinding Padding}">
                                                            <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
                                                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                        Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                        AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </ScrollViewer>

                                                            <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"/>
                                                        </DockPanel>


                                                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                        <Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Resources>
                                <ListView.Style>
                                    <Style TargetType="ListView">
                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                                        <Setter Property="AlternationCount" Value="2"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListView">
                                                    <Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}">
                                                        <ScrollViewer Style="{DynamicResource ListViewScrollViewerStyle}">
                                                            <ItemsPresenter />
                                                        </ScrollViewer>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Style>
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderClickStyle}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn Header="" Width="{Binding ElementName=hwidth0, Path=ActualWidth}">
                                        </GridViewColumn>
                                        <GridViewColumn Header="Title" Width="{Binding ElementName=hwidth1, Path=ActualWidth}" helpers:GridViewSort.PropertyName="Name">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0">

                                                        <Viewbox Width="12" Height="12" Margin="0 0 4 2">
                                                            <Canvas Width="18" Height="18">
                                                                <Path Data="{Binding PathIcon}" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" />
                                                            </Canvas>
                                                        </Viewbox>
                                                        <TextBlock Text="{Binding Path=Name}" Padding="3" />

                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Published" Width="{Binding ElementName=hwidth2, Path=ActualWidth}" helpers:GridViewSort.PropertyName="Published">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding Path=PublishedDateTimeFormated}" Padding="3" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                        <Setter Property="Margin" Value="0 0 0 0"/>
                                        <Setter Property="Padding" Value="1"/>
                                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Top" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border Name="Border" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="0" SnapsToDevicePixels="true">
                                                        <Border.InputBindings>
                                                            <MouseBinding Command="{Binding Path=DataContext.ListviewLeftDoubleClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Gesture="LeftDoubleClick" />
                                                        </Border.InputBindings>
                                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>

                            <!-- ListView middle splitter -->
                            <GridSplitter x:Name="SplitterListViewContentPreviewWebBrowser" Grid.Row="2" Grid.Column="0" ResizeDirection="Rows" Style="{StaticResource GridSplitterStyle}"></GridSplitter>

                            <!-- ListView Bottom -->
                            <Grid x:Name="GridListViewContentPreviewWebBrowser" Grid.Row="3" Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Row="0" Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Row="0" Grid.Column="0" Width="24" Height="24" Style="{DynamicResource PathButton}" Content="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z" HorizontalAlignment="Center" Command="{Binding Path=OpenInAppBrowserCommand}" CommandParameter="{Binding SelectedItem}"></Button>

                                    <Button Grid.Row="0" Grid.Column="1" Width="24" Height="24" Style="{DynamicResource PathButton}" Content="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" HorizontalAlignment="Center" Command="{Binding Path=OpenInExternalBrowserCommand}" CommandParameter="{Binding SelectedItem}"></Button>

                                    <!-- Browser close button -->
                                    <Button Grid.Row="0" Grid.Column="3" Command="{Binding CloseContentBrowserCommand}" Style="{StaticResource PathButton}" Width="24" Height="24" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" Content="M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,8.4L13.4,12L17,15.6L15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4Z"></Button>

                                </Grid>

                                <!-- Contents viewer -->
                                <Grid Grid.Row="1" Grid.Column="0">

                                    <!-- Text contents viewer -->
                                    <TextBox x:Name="ListViewContentPreviewTextBox" Text="{Binding EntryContentText, Mode=OneWay}" Background="{DynamicResource WindowBackgroundBaseColorBrush}" TextWrapping="Wrap" IsReadOnly="True" IsTabStop="False" MinHeight="24" Style="{StaticResource FlatTextBoxStyle}">
                                        <TextBox.Resources>
                                            <Style TargetType="{x:Type ScrollBar}">
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                                <Setter Property="Margin" Value="0,0,0,0" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Style.Triggers>
                                                    <Trigger Property="Orientation" Value="Vertical">
                                                        <Setter Property="Width" Value="18"/>
                                                        <Setter Property="Height" Value="Auto" />
                                                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                    </Trigger>
                                                    <Trigger Property="Orientation" Value="Horizontal">
                                                        <Setter Property="Width" Value="Auto"/>
                                                        <Setter Property="Height" Value="18" />
                                                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type ScrollViewer}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*" />
                                                                    <RowDefinition Height="Auto" />
                                                                </Grid.RowDefinitions>
                                                                <!--
                                                    <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="Transparent" />
                                                    -->
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TextBox.Resources>
                                    </TextBox>

                                    <wv2:WebView2 Name="ListViewContentPreviewWebBrowser" Margin="3" Visibility="{Binding IsContentBrowserVisible, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"/>

                                </Grid>

                            </Grid>

                        </Grid>
                        
                    </TabItem>
                    
                </TabControl>

            </Grid>

            <!-- DebugWindow Splitter -->
            <GridSplitter x:Name="DebugWindowGridSplitter" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" ResizeDirection="Rows" Style="{StaticResource GridSplitterStyle}" Visibility="Collapsed"></GridSplitter>

            <!-- DebugWindow -->
            <Grid x:Name="DebugWindow" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Visibility="Collapsed">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Command="{Binding CloseDebugWindowCommand}" Style="{StaticResource PathButton}" Width="24" Height="24" Margin="0 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Center" Content="M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,8.4L13.4,12L17,15.6L15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4Z"></Button>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <TextBox x:Name="DebugTextBox" Padding="6 6 24 6" Background="{DynamicResource WindowBackgroundBaseColorBrush}" Foreground="Gray" BorderThickness="0" VerticalAlignment="Stretch" TextWrapping="NoWrap" IsReadOnly="True" IsTabStop="False" Margin="0" MinHeight="24" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="18" />
                                            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type ScrollViewer}">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <!--
                                                    <Rectangle x:Name="Corner" Grid.Row="1" Grid.Column="1" Fill="Transparent" />
                                                    -->
                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <Button Command="{Binding ClearDebugTextCommand}" ToolTip="Clear" Style="{StaticResource PathButton}" Width="24" Height="24" HorizontalAlignment="Right" Margin="0 0 18 0" VerticalAlignment="Top" Content="M16.24,3.56L21.19,8.5C21.97,9.29 21.97,10.55 21.19,11.34L12,20.53C10.44,22.09 7.91,22.09 6.34,20.53L2.81,17C2.03,16.21 2.03,14.95 2.81,14.16L13.41,3.56C14.2,2.78 15.46,2.78 16.24,3.56M4.22,15.58L7.76,19.11C8.54,19.9 9.8,19.9 10.59,19.11L14.12,15.58L9.17,10.63L4.22,15.58Z"></Button>

                    </Grid>

                </Grid>
            </Grid>

            <!-- StatusBar -->
            <StatusBar Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Background="{DynamicResource BoardBackgroundColorBrush}" Padding="0 1 0 0" Height="28">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem Grid.Column="0">

                </StatusBarItem>

                <Separator Grid.Column="1" Background="#202020" Margin="1"/>
                
                <!-- Statusbar Message  -->
                <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Left">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="6 0 6 0">

                        <TextBlock Text="{Binding StatusBarMessage}" Style="{DynamicResource DefaultTextBlockStyle}" Foreground="{DynamicResource ControlDarkColorBrush}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="6 0 6 0" Padding="0" TextWrapping="NoWrap"></TextBlock>

                    </StackPanel>

                </StatusBarItem>

                <Separator Grid.Column="3" Background="#202020" Margin="1" Visibility="Collapsed" />

                <!-- Browser (Open in App) Icon  -->
                <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Center" Padding="0" Margin="0" Background="{DynamicResource BoardBackgroundColorBrush}" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6 0 6 0" Width="24">

                        <Button Width="24" Height="24" Margin="00" Command="{Binding ShowBrowserWindowCommand}" VerticalAlignment="Center" ToolTip="In-App Browser Window Show/Hide">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Margin" Value="0 0 0 0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="0" BorderThickness="0">
                                                    <Viewbox Width="16" Height="16" Margin="0">
                                                        <Canvas Width="24" Height="24">
                                                            <Canvas.RenderTransform>
                                                                <TranslateTransform X="1" Y="3"/>
                                                            </Canvas.RenderTransform>
                                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform">
                                                                <Path.Fill>
                                                                    <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                                </Path.Fill>
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <TransformGroup.Children>
                                                                            <RotateTransform Angle="0" />
                                                                            <ScaleTransform ScaleX="1.18" ScaleY="1.18" />
                                                                        </TransformGroup.Children>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Border>
                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </Trigger>

                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsPressed" Value="False" />
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </MultiTrigger>

                                                    <MultiTrigger>
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsPressed" Value="true" />
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                    </MultiTrigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            <Button.Content>
                                M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z
                            </Button.Content>
                        </Button>

                    </StackPanel>
                </StatusBarItem>

                <Separator Grid.Column="5" Background="#202020" Margin="1"/>
                
                <!-- Debug Window Icon 
                 Visibility="{Binding IsDebugWindowEnabled, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                -->
                <StatusBarItem Grid.Column="6" HorizontalContentAlignment="Center" Padding="0" Margin="0" Background="{DynamicResource BoardBackgroundColorBrush}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6 0 6 0" Width="24">

                        <Button Width="24" Height="24" Margin="0" Padding="0" Command="{Binding ShowDebugWindowCommand}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Debug Window Show/Hide">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Margin" Value="0 0 0 0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="0" BorderThickness="0">
                                                    <Viewbox Width="16" Height="16">
                                                        <Canvas Width="24" Height="24">
                                                            <Canvas.RenderTransform>
                                                                <TranslateTransform X="0" Y="3"/>
                                                            </Canvas.RenderTransform>
                                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform">
                                                                <Path.Fill>
                                                                    <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                                </Path.Fill>
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <TransformGroup.Children>
                                                                            <RotateTransform Angle="0" />
                                                                            <ScaleTransform ScaleX="1.18" ScaleY="1.18" />
                                                                        </TransformGroup.Children>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Border>
                                                <ControlTemplate.Triggers>

                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </Trigger>

                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </Trigger>

                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsPressed" Value="False" />
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                    </MultiTrigger>

                                                    <MultiTrigger>
                                                        <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsPressed" Value="true" />
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                    </MultiTrigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            <Button.Content>
                                M15,4V6H18V18H15V20H20V4M4,4V20H9V18H6V6H9V4H4Z
                            </Button.Content>
                            <!-- チェック付きバグマーク 
                            M18,7H15.19C14.74,6.2 14.12,5.5 13.37,5L15,3.41L13.59,2L11.42,4.17C10.96,4.06 10.5,4 10,4C9.5,4 9.05,4.06 8.59,4.17L6.41,2L5,3.41L6.62,5C5.87,5.5 5.26,6.21 4.81,7H2V9H4.09C4.03,9.33 4,9.66 4,10V11H2V13H4V14C4,14.34 4.03,14.67 4.09,15H2V17H4.81C6.26,19.5 9.28,20.61 12,19.65C12,19.43 12,19.22 12,19C12,16.46 13.61,14.2 16,13.35V13H18V11H16V10C16,9.66 15.97,9.33 15.91,9H18V7M12,15H8V13H12V15M12,11H8V9H12V11M17.75,22.16L15,19.16L16.16,18L17.75,19.59L21.34,16L22.5,17.41L17.75,22.16Z

                            無印バグマーク
                            M20,8H17.19C16.74,7.2 16.12,6.5 15.37,6L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.05,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6C7.87,6.5 7.26,7.21 6.81,8H4V10H6.09C6.03,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.03,15.67 6.09,16H4V18H6.81C8.47,20.87 12.14,21.84 15,20.18C15.91,19.66 16.67,18.9 17.19,18H20V16H17.91C17.97,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.97,10.33 17.91,10H20V8M16,15A4,4 0 0,1 12,19A4,4 0 0,1 8,15V11A4,4 0 0,1 12,7A4,4 0 0,1 16,11V15M14,10V12H10V10H14M10,14H14V16H10V14Z
                            
                            タグ
                            M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z
                            -->
                        </Button>

                    </StackPanel>
                </StatusBarItem>

            </StatusBar>

            <!-- In-App Browser -->
            <Grid x:Name="GridCardViewContentPreviewWebBrowser" Grid.Row="1" Grid.Column="0" Grid.RowSpan="6" Grid.ColumnSpan="3" Visibility="Collapsed">
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#313131" Opacity="0.8"></Rectangle>
                
                <Grid Background="{DynamicResource BoardBackgroundColorBrush}" Margin="12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Row="0" Grid.Column="1" Width="24" Height="24" Style="{DynamicResource PathButton}" Content="M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z" HorizontalAlignment="Center" Command="{Binding Path=OpenInExternalBrowserCommand}" CommandParameter="{Binding SelectedItem}"></Button>

                        <!-- Browser close button -->
                        <Button Grid.Row="0" Grid.Column="3" Command="{Binding CloseContentBrowserCommand}" Style="{StaticResource PathButton}" Width="24" Height="24" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" Content="M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,8.4L13.4,12L17,15.6L15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4Z"></Button>

                    </Grid>

                    <!-- WebView2 -->
                    <wv2:WebView2 Name="CardViewContentPreviewWebBrowser" Grid.Row="1" Grid.Column="0" Margin="3"/>
                </Grid>

            </Grid>

        </Grid>
    </Border>
</Window>
