<Window x:Class="BlogWrite.Views.ServiceDiscoveryWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BlogWrite.Views" xmlns:viewmodels="clr-namespace:BlogWrite.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ServiceDiscoveryViewModel}"
        mc:Ignorable="d"
        WindowStyle="None"
        Background="{DynamicResource BoardBackgroundColorBrush}"
        Title="Service Discovery" 
        Height="350" Width="650"
        WindowStartupLocation="CenterOwner">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"/>
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Cursor" Value="Wait" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Border Style="{StaticResource WindowMainPanelStyle}" UseLayoutRounding="True">
        <Grid x:Name="LayoutGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>

            <!-- App title bar -->
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="{DynamicResource BoardBackgroundColorBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- App icon -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Background="{DynamicResource BoardBackgroundColorBrush}">
                    <Button ToolTip="" IsHitTestVisible="True" WindowChrome.IsHitTestVisibleInChrome="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                <!--
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                -->
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="Border" CornerRadius="0" BorderThickness="0" Background="{TemplateBinding Background}">
                                                <Viewbox Width="16" Height="16" Margin="6 0 6 0">
                                                    <Canvas Width="24" Height="24">
                                                        <Canvas.RenderTransform>
                                                            <TranslateTransform X="0" Y="0"/>
                                                        </Canvas.RenderTransform>

                                                    </Canvas>
                                                </Viewbox>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        M15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4M15,5.9C16.16,5.9 17.1,6.84 17.1,8C17.1,9.16 16.16,10.1 15,10.1A2.1,2.1 0 0,1 12.9,8A2.1,2.1 0 0,1 15,5.9M4,7V10H1V12H4V15H6V12H9V10H6V7H4M15,13C12.33,13 7,14.33 7,17V20H23V17C23,14.33 17.67,13 15,13M15,14.9C17.97,14.9 21.1,16.36 21.1,17V18.1H8.9V17C8.9,16.36 12,14.9 15,14.9Z
                    </Button>
                </StackPanel>

                <!-- System icons -->
                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right" Margin="0">

                    <Button x:Name="CloseButton" Style="{StaticResource PathSysButtonClose}" Click="CloseButton_Click" WindowChrome.IsHitTestVisibleInChrome="True">
                        M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z
                    </Button>

                </StackPanel>

            </Grid>

            <TabControl Grid.Row="1" Grid.Column="1" Margin="6 6 6 12" Background="Transparent" SelectedIndex="{Binding SelectedTabIndex}" Style="{DynamicResource HiddlenTabControl}">
                <!-- URL input page -->
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="12"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="12"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- URL input textbox -->
                        <StackPanel Grid.Row="0" Grid.Column="1">
                            <Label Content="URL (Website, Feed or API endpoint) :" Style="{DynamicResource DefaultLabelStyle}" Margin="6"></Label>
                            <Border VerticalAlignment="Center" HorizontalAlignment="Stretch" CornerRadius="3" Background="{StaticResource NormalTextBoxBackgroundColorBrush}" Padding="0" Margin="6">
                                <TextBox VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding WebsiteOrEndpointUrl, UpdateSourceTrigger=PropertyChanged}" IsVisibleChanged="TextBox_IsVisibleChanged">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
                                            <Setter Property="Background" Value="{StaticResource NormalTextBoxBackgroundColorBrush}" />
                                            <Setter Property="Margin" Value="0" />
                                            <Setter Property="Padding" Value="3" />
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                        <Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="28"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                <Button Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" ToolTip="Go" ToolTipService.ToolTip="Go" IsDefault="True" IsEnabled="{Binding IsButtonEnabled}" Command="{Binding CheckEndpointCommand}" Content="M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z">
                                                                    <Button.Style>
                                                                        <Style TargetType="Button">
                                                                            <Setter Property="SnapsToDevicePixels" Value="true" />
                                                                            <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                            <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                                                                            <Setter Property="Background" Value="Transparent" />
                                                                            <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="Button">
                                                                                        <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" CornerRadius="0" BorderThickness="0">
                                                                                            <Border.BorderBrush>
                                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                    <LinearGradientBrush.GradientStops>
                                                                                                        <GradientStopCollection>
                                                                                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                                                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                                                                        </GradientStopCollection>
                                                                                                    </LinearGradientBrush.GradientStops>
                                                                                                </LinearGradientBrush>
                                                                                            </Border.BorderBrush>
                                                                                            <Border.Background>
                                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                                                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                                                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                                                                                </LinearGradientBrush>
                                                                                            </Border.Background>

                                                                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="8" RenderTransformOrigin="0.5,0.5">
                                                                                                <Path.RenderTransform>
                                                                                                    <TransformGroup>
                                                                                                        <TransformGroup.Children>
                                                                                                            <RotateTransform Angle="0" />
                                                                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                                                        </TransformGroup.Children>
                                                                                                    </TransformGroup>
                                                                                                </Path.RenderTransform>
                                                                                                <Path.Fill>
                                                                                                    <SolidColorBrush x:Name="PathIconColor" Color="#333"/>
                                                                                                </Path.Fill>
                                                                                            </Path>
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsDefault" Value="true">
                                                                                                <Setter TargetName="Border" Property="BorderBrush">
                                                                                                    <Setter.Value>
                                                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                            <GradientBrush.GradientStops>
                                                                                                                <GradientStopCollection>
                                                                                                                    <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="0.0" />
                                                                                                                    <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                                                                                </GradientStopCollection>
                                                                                                            </GradientBrush.GradientStops>
                                                                                                        </LinearGradientBrush>

                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Trigger>

                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                <Setter TargetName="PathIcon" Property="Fill" Value="#666"/>
                                                                                            </Trigger>

                                                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                                                <Setter TargetName="PathIcon" Property="Fill" Value="#222"/>
                                                                                            </Trigger>

                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsPressed" Value="False" />
                                                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter TargetName="PathIcon" Property="Fill" Value="#000"/>
                                                                                            </MultiTrigger>

                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsPressed" Value="true" />
                                                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter TargetName="PathIcon" Property="Fill" Value="#222"/>
                                                                                            </MultiTrigger>

                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Button.Style>
                                                                </Button>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                                                <Setter Property="Background" Value="Gainsboro" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Border>
                        </StackPanel>

                        <!-- Error nortification -->
                        <Grid Grid.Row="1" Grid.Column="1" Margin="6" Visibility="{Binding IsShowError, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Viewbox Grid.Row="0" Grid.Column="0" Margin="12" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Uniform" Width="24" Height="24" Focusable="False" FocusVisualStyle="{x:Null}">
                                <Canvas Opacity="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path Opacity="0.9" Width="12" Height="12" Fill="Yellow" Stretch="Uniform" Data="M12,2L1,21H23M12,6L19.53,19H4.47M11,10V14H13V10M11,16V18H13V16">
                                    </Path>
                                </Canvas>
                            </Viewbox>

                            <StackPanel Grid.Row="0" Grid.Column="1" Margin="0 10 0 0">

                                <TextBox FontWeight="Bold" Padding="6" Margin="0" Text="{Binding StatusTitleText, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" BorderThickness="0" Style="{StaticResource TransparentTextBoxStyle}"></TextBox>

                                <TextBox FontWeight="Normal" Padding="6" Margin="0" Text="{Binding StatusText, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsReadOnly="True" BorderThickness="0" Style="{StaticResource TransparentTextBoxStyle}"></TextBox>

                            </StackPanel>
                        </Grid>

                        <!-- Log text -->
                        <Grid Grid.Row="2" Grid.Column="1" Margin="6" Visibility="{Binding IsShowLog, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                            <Border CornerRadius="3" Background="{DynamicResource WindowBackgroundBaseColorBrush}">

                                <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Padding="6" Opacity="0.8" Text="{Binding StatusLogText, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" Style="{StaticResource TransparentTextBoxStyle}"></TextBox>

                            </Border>

                        </Grid>
                    </Grid>
                </TabItem>
                <!-- Service select page -->
                <TabItem>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Margin="6">

                                <Button Command="{Binding GoBackTo1Command}" Style="{DynamicResource PathButton}">M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M18,11H10L13.5,7.5L12.08,6.08L6.16,12L12.08,17.92L13.5,16.5L10,13H18V11Z</Button>

                            </StackPanel>

                            <StackPanel Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" Margin="6">

                                <Button Command="{Binding AddSelectedAndCloseCommand}" Style="{DynamicResource PathButton}">M17,13H13V17H11V13H7V11H11V7H13V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z</Button>

                            </StackPanel>
                        </Grid>


                        <Grid x:Name="ListViewDummy" Grid.Row="1" Grid.Column="1" Margin="16" Visibility="Hidden">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--  This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid  -->
                            <Grid x:Name="RLEWidth0" Grid.Column="0" />
                            <Grid x:Name="RLEWidth1" Grid.Column="1" />
                            <Grid x:Name="RLEWidth2" Grid.Column="2" />
                        </Grid>
                        <ListView Grid.Row="1" Grid.Column="1" Margin="6" ItemsSource="{Binding LinkItems}" SelectedItem="{Binding SelectedLinkItem, Mode=TwoWay}">

                            <ListView.View>
                                <GridView>
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="Icom" Width="{Binding ElementName=RLEWidth0, Path=ActualWidth}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid HorizontalAlignment="Left" VerticalAlignment="Center">

                                                    <Viewbox HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Width="20" Height="20" Focusable="False" FocusVisualStyle="{x:Null}" Margin="12">
                                                        <Canvas Opacity="1" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                            <Path Opacity="0.9" Width="24" Height="24" Fill="#333" Stretch="Uniform" Data="{Binding IconPath}">
                                                            </Path>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    
                                    <GridViewColumn Header="Type" Width="{Binding ElementName=RLEWidth1, Path=ActualWidth}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock x:Name="RLName" Text="{Binding TypeText, Mode=OneWay}" Padding="3"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Header="Title" Width="{Binding ElementName=RLEWidth2, Path=ActualWidth}">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>

                                                    <TextBlock x:Name="RLName" Text="{Binding Title, Mode=OneWay}" Padding="3"/>
                                                    <TextBlock x:Name="RLUrl" Text="{Binding DisplayUrl, Mode=OneWay}" Padding="3"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                </GridView>
                            </ListView.View>
                        </ListView>

                    </Grid>
                </TabItem>
            </TabControl>
            
        </Grid>
    </Border>
</Window>
